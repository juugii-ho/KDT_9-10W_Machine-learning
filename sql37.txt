

 
📖SQLD. 제 37 회 기출 문제


문제 1. 다음에서 설명하는 것은 ER모델 중 어떤 항목에 대한 설명인가?  정답확인🌼

1) 모든 릴레이션(Relation)은 원자값(Atomic)을 가져야 한다.
2) 어떤 릴레이션(Relation)에서 속성 값이 가질수 있는 값의 범위를 의미한다.
3) 실제 속성값이 올바르게 되었는지 확인한다.
4) 속성명과 반드시 동일할 필요는 없다.




1) 카디날리티(Cardinality)2) 도메인(Domain)3) 인스턴스(Instance)4) 차수(Degree)



 

문제 2. 다음 중에서 도메인(Domain) 에대한 특징으로 옳지 않은 것은? 정답확인🌼
 





1) 릴레이션의 속성에 대한 데이터 타입과 크기이다.2) 속성에 대하여 NOT NULL 제약사항을 설정하여 NULL 값을 허용하지 않는다.3) 속성에 값을 입력 할 때 CHECK 기능을 사용해서 입력 값을 검사한다.4) 하나의 릴레이션과 관계된 다른 릴레이션의 FK(Foreign key) 제약조건이다.





 

문제 3. 다음 보기 중 슈퍼/서브타입 데이터 모델의 변환타입에 대한 설명으로 옳은 것은? 정답확인🌼
 





1) One To One이란 개별로 발생되는 트랜잭션에 대해서는 개별 테이블로 구성하고 테이블의 수가 많아진다.2) Plus Type은 하나의 테이블을 생성하는 것으로 조인(Join)이 발생하지 않는다.3) Plus Type은 슈퍼+서브타입 형식으로 데이터를 처리하는 경우로 조인성능이 우수하여 Super Type과 Sub Type변환 시에 항상 사용된다.4) One To One type은 조인성능이 우수하기 때문에 관리가 편리하다.






문제 4. 다음 보기 중에서 데이터베이스 모델링에 대한 특징으로 옳지 않은 것은? 정답확인🌼





1) 내부화2) 추상화3) 단순화4) 명확화





 

문제 5. 다음 보기 중 아래 시나리오에서 엔터티로 가장 적절한 것은? 정답확인🌼
[시나리오]
한림대학교 성심병원은 상급종합병원이고 국내에는 약 43개의 상급종합병원이 있다. 
상급 종합병원에서 진료를 받기 위해서는 에약을 해야 한다.
예약을 하기 위해서 환자로 등록해야 하는데, 환자 등록을 위해서는 
환자이름, 주소, 전화번호, 나이, 최근 병력등의 정보를 한림대학교 성심병원 웹사이트에 접속해서 입력해야한다.





1) 나이2) 환자3) 이름4) 주소





 

문제 6. 다음 아래의 설명에 해당하는 속성의 종류는 무엇인가? 정답확인🌼


ABC 온라인 쇼핑몰은 매일 고객들의 주문정보를 주문 릴레이션에 저장하고 있다.
그리고 매일 24시에 주문 릴레이션에 있는 금액을 조회하여 일별 주문합계 테이블에 상품별, 일별, 주문합계 금액을 보관한다.
이때 주문 릴레이션의 금액 속성에 의해서 발생된 주문합계 속성은 무엇이라고 하는가?
또한 주문합계 속성은 금액속성과 데이터 정합성을 유지해야 한다.



1) 파생속성2) 기본속성3) 설계속성4) 연관속성





 

문제 7. 다음 주어진 ERD 관계에 대한 설명으로 옳지 않은 것은? 정답확인🌼
 






1) 하나의 UserID는 여러 개의 GroupID를 가질 수 없다.2) GROUP 릴레이션과 ACCOUNT 릴레이션은 식별관계를 가진다.3) GROUP 릴레이션은 한 명의 UserID도 없을 수 있다.4) GROUP 릴레이션은 여러 명의 UserID를 가질 수 있다.





 

문제 8. 다음 보기 중 엔터티 간의 관계에서 1:1, 1:M 과 같이 관계의 기수성을 나타내는 것은? 정답확인🌼





1) 관계명(Relationship Membership)2) 관계차수(Relationship Degree/Car-dinality)3) 도메인(Domain)4) 관계정의(Relationship Definitoin)





 

문제 9. 다음은 데이터베이스 모델링 시에 성능을 고려한 모델링 활동이다. 성능을 고려한 데이터베이스 모델링 단계에서 가장 처음으로 수행해야 할 것과 가장 마지막으로 수행해야 할 것은? 정답확인🌼

가. 데이터베이스 모델링 시에 정규화를 수행한다.
나. 테이블에서 보관하는 데이터 용량과 트랜잭션의 유형에 따라서 반정규화를 한다.
다. 트랜잭션의 유형을 분석한다.
라. 데이터베이스 전체 용량을 산정해야 한다.
마. 성능관점에서 데이터 모델을 검증하고 확인한다.
바. 기본키와 외래키를 조정하거나, 수퍼타입과 서브타입을 조정한다.




1) 가, 나2) 다, 마3) 다, 라4) 가, 마





 

문제 10. 다음 중 아래에서 엔터티 내에 주식별자를 도출하는 기준을 묶은 것으로 가장 적절한 것은? 정답확인🌼
가. 쇼핑몰 사이트에서는 회원번호가 쇼핑몰 사이트를 운영할 때 자주 이용되는 속성이므로 주식별자로 지정한다.
나. 엔터티 내에서 고객 리스트, 상품 리스트 등과 같은 것을 주식별자로 지정한다.
다. 주식별자로 지정할 때 자주변경 되는 속성을 지정한다.
라. 여러 개의 속성으로 구성된 복합속성의 경우 주식별자에 너무 많은 속성이 포함되지 않게 한다.





1) 가, 나2) 가, 라3) 나, 라4) 가, 다





 

문제 11. 다음 보기 중 해시조인(Hash Join)에 대한 설명으로 옳지 않은 것은? 정답확인🌼





1) 해시조인은 두 개의 테이블 간에 조인을 할 때 범위검색이 아닌 동등조인(EQUI-Join)에 적합한 방식이다.2) 작은 테이블(Build Input)을 먼저 읽어서 Hash Area에 해시 테이블을 생성하는 방법으로 큰 테이블로 Hash Area를 생성하면 과다한Sort가 유발 되어 성능이 저하될 수 있다.3) 온라인 트랜잭션 처리(OLTP)에 유용하다.4) 해시조인은 수행 빈도가 낮고 수행시간이 오래 걸리는 대용량 테이블에 대한 조인을 할 때 유용하다.





 

문제 12. 다음 보기 중 Join기법에 대한 설명으로 가장 적절한 것은?  정답확인🌼




1) Nested Loop Join은 OLTP 시스템에서 데이터를 조인할 때 먼저 나오는 테이블의 선택도가 낮은 테이블을 참조하는 것이 유리하다.2) Sort Merge Join은 오직 동등 Join(Equi Join)에서만 사용할 수 있다.3) Hash Join은 결과 행의 수가 큰 테이블을 선행 테이블로 사용하면 Hash Area사이즈가 작아져서 성능에 유리하다.4) Hash Join은 Sort Merge Join, Nested Loop Join보다 항상 성능이 우수하다.




 

문제 13. 다음 주어진 테이블에 대해서 아래와 같은 결과값이 나오도록 SQL문의 빈칸에 들어갈 수 있는 내용을 고르시오. 정답확인🌼

[T_TEST]
DEPTNO   JOB    SAL
--------------------
10     CLERK    1300
10     MANAGER  2150
20     CLERK    1900
20     ANALYST  6000
20     MANAGER  2000

[결과]
DEPTNO   JOB    SUM(SAL)
------------------------
10     CLERK    1300
10     MANAGER  2150
10              3450
20     CLERK    1900
20     ANALYST  6000
20     MANAGER  2000
20              9900
                13350

[SQL]
SELECT DEPTNO, JOB, SUM(SAL)
FROM T_TEST
GROUP BY (           );


1) DEPTNO, JOB

2) GROUPING SETS(DEPTNO, JOB)

3) ROLLUP(DEPTNO, JOB)

4) CUBE(DEPTNO, JOB)
 
 

문제 14. 주어진 두 개의 테이블에 대해서 아래의 SQL문을 수행한 이후에 TEST1 테이블의 건수는? 정답확인🌼
[TEST1]
COL1  COL2  COL3
------------------
A      X      1
B      Y      2
C      Z      3

[TEST2]
COL1  COL2  COL3
------------------
A      X      1
B      Y      2
C      Z      3
D      가      4
E      나      5

[SQL]
MERGE INTO TEST1
USING TEST2
 ON (TEST1.COL1 = TEST2.COL1)
WHEN MATCHED THEN
 UPDATE SET TEST1.COL3 = 4
      WHERE TEST1.COL3 = 2
 DELETE WHERE TEST1.COL3 <= 2
WHEN NOT MATCHED THEN
 INSERT(TEST1.COL1, TEST1.COL2, TEST1.COL3)
 VALUES(TEST2.COL1, TEST2.COL2, TEST2.COL3);




1) 42) 33) 54) 8




 

문제 15. 다음은 ABC기업에 대한 데이터베이스 모델링이다. 다음의 설명 중에서 올바른 것은?  정답확인🌼
 





1) 제품코드에 대한 배송지 정보는 제품마스터 테이블이 주문이력을 직접 조인하면 된다.2) 제품마스터와 주문이력을 조인하면 카텐시안 곱이 발생한다.3) 제품마스터와 제품생산은 비식별관계이다.4) 제품마스터에서 주문일자를 조회하기 위해서는 WHERE의 조건이 최소 4개 이상이다.




 

문제 16. 아래의 TEST10 테이블에 대해서 아래의 SQL문을 수행하였을 때의 결과 건수는?  정답확인🌼
[TEST10]
EMPNO  NAME  MANAGER
--------------------
1      LIM     NULL
2      PARK    1
3      KIM     2

[SQL]
SELECT LPAD('**', (LEVEL-1) * 2, ' ')
       || EMPNO AS EMP, NAME
FROM TEST10
WHERE EMPNO <> 3
START WITH EMPNO = 3
CONNECT BY EMPNO = PRIOR MANAGER;





1) 02) 13) 24) 3





 
 

문제 17. 다음 주어진 SQL문을 수행하였을 때의 결과가 아래와 같을 때 빈칸에 들어갈 것으로 알맞은 것은?정답확인🌼


[SQL]
SELECT 10+20 * (( ? )(NULL, 0.1, 0.2))
FROM. DUAL;

[RESULT]
14



1) ISNULL2) NVL3) NVL24) COALESCE





 

문제 18. 보기에서 SELECT 결과가 NULL이 아닌 경우는? 정답확인🌼
 
1) SELECT COALESCE(1, 2, 3) FROM DUAL;

2) SELECT CASE 0 WHEN 1 THEN 2 ELSE NULL END FROM DUAL;

3) SELECT DECODE('A', 'B', 'C', NULL) FROM DUAL;

4) SELECT NULLIF('A', 'A') FROM DUAL;
 

문제 19. 다음 주어진 데이터에서 해당 SQL문을 실행 했을 때의 결과 값으로 알맞은 것은? 정답확인🌼
 
[TABLE19]
A   X
------
1   100
1   NULL
2   100
2   200

[SQL]
SELECT A, SUM(X) AS TAB FROM TABLE19 GROUP BY A;

1)                   2)
A   TAB              A   TAB
-------              -------
1   100              1   100
                     2   200

3)                   4)
A   TAB              A   TAB
-------              -------
1   100              1   100
2   300              1   NULL
                     2   100
                     2   200
 
문제 20. 다음의 SQL문이 순서대로 수행되고 난 후 결과값으로 알맞은 것은? 정답확인🌼
[SQL]
CREATE TABLE TEST20( COL1 NUMBER(10));
INSERT INTO TEST20 VALUES(1);
INSERT INTO TEST20 VALUES(4);
SAVEPOINT SV1;
UPDATE TEST20 SET COL1=8 WHERE COL1=2;
SAVEPOINT SV1;
DELETE TEST20 WHERE COL1 >= 2;
ROLLBACK TO SV1;
INSERT INTO TEST20 VALUES(3);
SELECT MAX(COL1) FROM TEST20;

1)           2)
MAX(COL1)     MAX(COL1)
---------     ---------
2             3

3)           4)
MAX(COL1)     MAX(COL1)
---------     ---------
4             1​

 

문제 21. 다음 주어진 테이블에서 집계 함수를 수행하였을 때 결과값으로 다른 것을 고르시오.정답확인🌼
 
[TEST21]
USERID    USERCOUNT
-------------------
KIM        10
PARK       20
LIM        NULL
SIN        NULL
1) SELECT COUNT(NVL (USERCOUNT, 0)) FROM TEST21;

2) SELECT SUM(NVL (USERCOUNT, 0)) / 4 FROM TEST21;

3) SELECT AVG(NVL (USERCOUNT, 0)) FROM TEST21;

4) SELECT AVG(NVL (USERCOUNT, 1)) - 0.5 FROM TEST21;
 

문제 22. 다음 파티션에 대한 설명으로 틀린 것을 고르시오. 정답확인🌼
1) RANK() OVER (PARTITION BY JOB ORDER BY 급여 DESC) JOB_RANK
   #직업별 급여가 높은 순서대로 부여되고 동일한 순위는 동일한 값이 부여 된다.

2) SUM(급여) OVER (PARTITION BY MGR ORDER BY 급여 RANGE UNBOUNDED PRECEDING)
   #RANGE는 논리적 주소에 의한 행 집합을 의미하고 MGR별 현재 행부터 파티션내 첫번째 행까지 급여의 합계를 계산한다.

3) AVG(급여) OVER (PARTITION BY MGR ORDER BY 날짜 ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING))
   #각 MGR 별로 앞의 한건, 현재 행, 뒤의 한건 사이에서 급여의 평균을 계산한다.

4) COUNT(*) OVER (ORDER BY 급여) RANGE BETWEEN 10 PRECEDING AND 300 FOLLOWING)
   #급여를 기준으로 현재 행에서의 급여의 10에서 300사이의 급여를 가지는 행의 수를 COUNT

문제 23. 다음 주어진 테이블에서 아래의 SQL을 수행한 결과로 알맞은 것은?  정답확인🌼
[TEST23]
COL1   COL2   COL3   COL4
-------------------------
10     10     10     20
20     20     NULL   30
30     NULL   NULL   10
NULL   30     10     40

[SQL]
SELECT SUM(COL1+COL2+COL3+COL4) FROM TEST23;
SELECT SUM(COL1) + SUM(COL2) + SUM(COL3) + SUM(COL4) FROM TEST23;




1) 50, NULL2) NULL, 2403) 50, 2404) NULL, NULL




 

문제 24. 다음 보기 중 PL/SQL에 대한 설명으로 가장 적절하지 않은 것은? 정답확인🌼




1) 변수와 상수 등을 사용하여 일반 SQL문장을 실행할 때 WHERE절의 조건 등으로 대입할 수 있다.2) Procedure, User Defined Function, Trigger  객체를 PL/SQL로 작성 할 수 있다.3) Procedure 내부에 작성된 절차적 코드는 PL/SQL엔진이 처리하고 일반적인 SQL문장은 SQL실행기가 처리한다.4) PL/SQL문의 기본 구조로 DECLARE, BEGIN ~ END, EXCEPTION 문을 필수적으로 써야한다.




 

문제 25. 다음의 테이블을 보고 실행한 SQL문 중에서 그 결과가 올바르지 않은 것은?  정답확인🌼

[T_ORDER]
Orderyear   Ordermonth    Price
---------------------------------
2020        01            1000
2020        02            6000
2020        03            2000
2020        04            3000
2020        05            2000
2020        06            1500​
1)
SELECT SUM(price) AS TOTAL
FROM t_order WHERE orderyear 
BETWEEN '2020' AND '2021' AND order month
BETWEEN '01' AND '12';
# 결과 : 15,500

2)
SELECT SUM(price) AS TOTAL
FROM t_order WHERE ordermonth in ('01','06');
# 결과 : 2,500

3)
SELECT SUM(price) AS TOTAL
FROM t_order WHERE ordermonth = '01' 
or ordermonth = '06';
# 결과 : 2,500

4)
SELECT SUM(decode('06', 0, price)) AS TOTAL
FROM t_order WHERE orderyear 
BETWEEN '2020' AND '2021';
# 결과 : 1,500

 

문제 26. 다음 보기 중 데이터베이스 테이블의 제약조건(Constraint)에 대한 설명으로 올바르지 않은 것은?  정답확인🌼




1) 외래키(Foreign Key)는 두 개의 테이블 간의 참조 무결성을 제약한다.2) 기본키(Primary Key) 제약사항은 테이블 당 하나만 제약할 수 있다.3) Check 제약조건(Constraint)은 특정값만 입력되게 제약한다.4) 고유키(Unique Key) 제약이 설정 되면 NULL값을 가질 수 없다.




 

문제 27. 다음 중 아래에서 Join에 대한 설명으로 올바르지 않은 것은?  정답확인🌼

가) 마스터 테이블과 슬레이브 테이블 간의 조인은 일반적으로 기본키와 외래키 사이에서 발생한다.
나) EQUI Join은 두 개의 테이블 간에 칼럼 값이 일치하는 것을 조회한다.
다) EQUI Join은 >, <, >=, <= 를 사용한다.
라) EQUI Join은 두 개의 테이블에서 교집합을 찾는다.



1) 가2) 나3) 다4) 라




 

문제 28. 다음 보기 중 아래의 SQL에 대한 설명으로 가장 올바른 것은? 정답확인🌼

[SQL]
SELECT 분류코드,
       AVG(상품가격) AS 상품가격,
       COUNT(*) OVER
       (
       ORDER BY AVG(상품가격)
                RANGE BETWEEN 10000
                PRECEDING AND 10000 FOLLOWING
       )AS CNT
FROM 상품
GROUP BY 분류코드;



1) WINDOW FUNCTION을 GROUP BY(분류코드) 절과 함께 사용하였으므로 위의 SQL은 오류가 발생한다.2) WINDOW FUNCTION의 ORDER BY 절로 인하여 문법오류이다.3) CNT 칼럼은 분류코드별 평균상품가격을 서로 비교하여 -10000 ~ 10000 사이에 존재하는 분류코드의 개수를 구한 것이다.4) CNT 칼럼은 상품전체의 평균상품가격을 서로 비교하여 -10000 ~ +10000 사이에 존재하는 상품의 개수를 구한 것 이다.




 

문제 29. 아래의 테이블들에 대해서 SQL문을 수행하였을 때의 결과 값은?  정답확인🌼
[TEST29_1]
COL
----
1
2
3
4

[TEST29_2]
COL
----
2
NULL

[SQL]
SELECT COUNT(*)
FROM TEST29_1 A
WHERE A.COL NOT IN (SELECT COL FROM TEST29_2);



1) 02) 13) 34) 6




 
문제 30. 다음 주어진 테이블에서 해당 SQL문을 실행한 결과로 알맞은 것은? 정답확인🌼
[TEST30]
COL1    COL2
------------
NULL     A
1        B
2        C
3        D
4        E

[SQL]
SELECT * FROM TEST30 WHERE COL1 IN(1, 2, NULL);
 

1)
COL1   COL2
-----------
1      B
2      C

2)
COL1   COL2
-----------
2      B
2      C

3)
COL1   COL2
-----------
1      B
2      C
3      D
4      E

4)
COL1   COL2
-----------
NULL   A
1      B
2      C
3      D
4      E

 

문제 31. 다음 주어진 데이터에 대해서 LIKE문을 사용하여 결과값에 "_" 가 들어간 문자열을 찾는 SQL문으로 올바른 것은? 정답확인🌼
[TEST31]
USERID     USERNAME
---------------------
1            __H
2            _B_
3            ___
4            D__

[RESULT]
USERID     USERNAME
---------------------
1            __H
2            _B_
3            ___
4            D__

1)
SELECT * FROM SQLD31 WHERE NAME LIKE '%H';

2)
SELECT * FROM SQLD31 WHERE NAME LIKE '%#_%';

3)
SELECT * FROM SQLD31 WHERE NAME LIKE '%@_%' ESCAPE '@';

4)
SELECT * FROM SQLD31 WHERE NAME LIKE '%_%' ESCAPE '_';​


 
문제 32. 다음 주어진 테이블에 대해서 아래의 SQL문을 수행하였을 때 결과 행의 수는? 정답확인🌼
[TEST32]
COL1     COL2
-------------
10000    'ABC'
10000    NULL
10000    'AbC'
20000    'ABC'

[SQL]
SELECT*FROM TEST32 WHERE (COL1, COL2) IN ((10000,'ABC'));







1) NULL2) 13) 24) 3







 

문제 33. 다음 중 TEST 사용자가 아래의 작업을 수행 할 수 있도록 권한을 부여하는 DCL로 올바른 것은? 정답확인🌼

[SQL]
UPDATE A_USER SET COL1 = 'TEST' WHERE COL2 = 100;


1) GRANT UPDATE TO TEST;

2) REVOKE SELECT ON A_USER FROM TEST;

3) REVOKE UPDATE ON A_USER TO TEST;

4) GRANT SELECT, UPDATE ON A_USER TO TEST;

 

문제 34. 아래의 테이블에 대해서 주어진 SQL문을 수행한 결과로 알맞은 것은?  정답확인🌼
[TEST34_1]
JUMUN    PRICE
--------------
10      2000
10      3000
20      4000
20      3500

[TEST34_2]
CUSTRANK   MINPRICE   MAXPRICE
-------------------------------
VVIP        6000        6999
VIP         5000        5999
GOLD        4000        4999

[SQL]
SELECT A.JUMUN AS JUMUN, B.CUSTRANK AS CUSTRANK
FROM (SELECT JUMUN, SUM(PRICE) AS TOTAL 
      FROM TEST34_1 GROUP BY JUMUN) A, TEST34_2 B
WHERE A.TOTAL BETWEEN B.MINPRICE AND B.MAXPRICE;
1)
JUMUN   CUSTRANK
  10     VIP
  20     GOLD

2)
JUMUN   CUSTRANK
  10     SILVER
  20     GOLD

3)
JUMUN   CUSTRANK
  10     VIP

4)
JUMUN   CUSTRANK
  10     VIP
  10     VIP
  20     GOLD
  20     GOLD
 
 
 

문제 35. 주어진 ERD에서 오류가 나지 않는 SQL문을 고르시오. 정답확인🌼
 
 

1)
SELECT * FROM 계좌마스터
WHERE 회원번호 = (SELECT DISTINCT 회원번호 FROM 고객);

2)
SELECT * FROM 계좌마스터 
WHERE 회원번호 IN (SELECT DISTINCT 회원번호 FROM 고객);

3)
SELECT 회원번호, 종목코드 FROM 일자별주문내역
WHERE 주문일자 EXISTS (SELECT DISTINCT 주문일자 FROM 계좌마스터);

4)
SELECT 회원번호, 종목코드 FROM 일자별주문내역
WHERE 주문일자 ALL (SELECT DISTINCT 주문일자 FROM 계좌마스터);


 
문제 36. 아래의 실행계획을 순서대로 바르게 나열한 것은?  ✏️ 정답확인🌼
0 -  SELECT ~
1 -  NESTED LOOP JOIN
2 -    NESTED LOOP JOIN
3 -      TABLE ACCESS(FULL)
4 -      TABLE ACCESS(BY INDEX ROWID)
5 -        INDEX(RANGE SCAN)
6 -    TABLE ACCESS(BY INDEX ROWID)
7 -      INDEX(RANGE SCAN)




1) 0-1-2-3-4-5-6-72) 3-4-5-4-2-7-6-03) 3-5-4-2-7-6-1-04) 3-4-2-5-7-6-1-0




 

문제 37. 다음 ERD로 작성한 SQL문에서 오류가 발생하는 것은?  정답확인🌼
 

1)
SELECT (SELECT SUM(주문금액) FROM 일자별주문내역)
FROM 고객마스터 GROUP BY 회원번호;

2)
SELECT SUM(일자별주문내역.주문금액)
FROM 일자별주문내역 
FULL OUTER JOIN 고객마스터 
ON 고객마스터.회원번호 = 일자별주문내역.회원번호 
GROUP BY 회원번호;

3)
SELECT SUM(일자별주문내역.주문금액)
FROM 고객마스터, 일자별주문내역 
WHERE 고객마스터.회원번호 = 일자별주문내역.회원번호
GROUP BY 회원번호;

4)
SELECT SUM(주문금액) 
FROM 일자별주문내역
WHERE EXISTS (SELECT*FROM 고객마스터
              UNION ALL SELECT*FROM 일자별주문내역)
GROUP BY 회원번호;
 

문제 38. 테이블 TEST38 에서 UNIQUE INDEX SCAN 을 수행할 수 없는 경우는 무엇인가?  정답확인🌼
 

1)
SELECT COL1, COL2, COL3
FROM TEST38 WHERE KEY1 = 5 AND KEY2 = 6;

2)
SELECT COL1, COL2, COL3
FROM TEST38 WHERE KEY1 = 1 AND KET2 = 2;

3)
SELECT COL1, COL2, COL3
FROM TEST38 WHERE (KEY1, KEY2) IN ((1, 2));

4)
SELECT * FROM TEST38 WHERE KEY1 = 1;

 

문제 39. 파티션 별 윈도우에서 가장 먼저 나온 값을 구하는 WINDOW FUNCTION은 무엇인가? 정답확인🌼




1) FIRST_VALUE2) LAG3) LAST_VALUE4) LEAD




 

문제 40. 주어진 SQL문에서 ORDER BY로 사용할 수 없는 것은?  정답확인🌼
[SQL]
SELECT JOB, COUNt(*) AS ROWCNT
FROM TEST40 GROUP BY JOB;




1) ORDER BY JOB2) ORDER BY ROWCNT  DESC3) ORDER BY COUNT(*)4) ORDER BY 3





 
문제 41. 다음 보기 중 트랜잭션의 특징에 대한 설명중 올바른 것은?  정답확인🌼




1) 원자성(Atomicity) : 트랜잭션 내의 모든 문장이 모두(ALL) 반영되거나, 혹은 일부가 반영 되어야 한다.2) 영속성 : 트랜잭션의 수행으로 데이터베이스의 무결성은 보장 될 수 없다.3) 일관성 : 여러 개의 트랜잭션들이 동시에 수행될 때, 한 개의 트랜잭션의 복사본을 유지한다.4) 지속성 : Commit이 완료되면 영구적으로 저장을 보장해야 한다.




 

문제 42. CROSS JOIN과 NATURAL JOIN의 차이점에 대해서 잘못 설명한 것은?   정답확인🌼




1) NATURAL JOIN은 테이블 간 동일한 이름을 가진 모든 칼럼들에 대해 조인을 수행한다.2) CROSS JOIN은 테이블 간 조건이 없는 경우 생길 수 있는 모든 데이터의 조합을 의미한다.3) CROSS JOIN과 NATURAL JOIN은 WHERE절에서 JOIN조건을 걸 수 없다.4) CROSS JOIN은 WHERE절에 JOIN조건을 추가할 수 있다.





 
문제 43. 다음 주어진 데이터에 대해서 아래의 계층형 SQL문을 실행하였을 때의 결과값이 아래와 같을 때 계층형 SQL문에서 빈칸에 들어갈 것으로 올바른 것은?  정답확인🌼
[TEST43]
EMPNO    MGR
-------------
8000     NULL
7788     7566
7566     8000
7876     7788

[SQL]
SELECT LEVEL, LPAD(' ', 4 * (LEVEL-1)) ||
EMPNO EMPLOYEE, MGR MANAGER, 
CONNECT_BY_ISLEAF AS LEAF FROM TEST43
START WITH (  ㄱ  ) 
CONNECT BY PRIOR (  ㄴ  );

[RESULT]

     LEVEL EMPLOYEE		   MANAGER     LEAF
---------- -------------------- ---------- ----------
	 1 8000 				    0
	 2     7566		      8000	    0
	 3	   7788 	      7566	    0
	 4	       7876	      7788	    1



1) ㄱ. MGRㄴ. MGR = EMPNO2)ㄱ. EMPNOㄴ. MGR = EMPNO3)ㄱ. EMPNO IS NULLㄴ. EMPNO = MGR ㅇ4)ㄱ. MGR IS NULLㄴ. EMPNO = MGR



- - - - - - - - 주관식 - - - - - - - -

문제 44. 다음 주어진 두개의 테이블에 대해서 아래와 같은 결과값이 반환되도록 아래의 SQL문의 빈칸에 들어갈 값을 적으시오.정답확인🌼
[TEST44_1]
STUDENTNO
---------
10
20
30

[TEST44_2]
GRADE
---------
50
60
70
[결과값]
     GRADE  STUDENTNO SUM(B.GRADE)
---------- ---------- ------------
	50	   10		50
	50	   20		50
	50	   30		50
	50		       150
	60	   10		60
	60	   20		60
	60	   30		60
	60		       180
	70	   10		70
	70	   20		70
	70	   30		70
	70		       210


[SQL]
SELECT B.GRADE, A.STUDENTNO, SUM(B.GRADE)
FROM TEST44_1 A, TEST44_2 B
GROUP BY (             );
✏️
 

문제 45. Oracle 환경에서 주어진 테이블을 아래의 결과와 같이 정렬하고자 할 때, SQL문의 빈칸에 들어갈 값을 작성하시오.
[TEST45]
C1    C2
----------
10    100
10    200
10    NULL
20    100
20    NULL
20    200

[RESULT]
C1    C2
----------
10    200
10    100
10    NULL
20    200
20    100
20    NULL

[SQL]
SELECT C1, C2
FROM SQLD_02
ORDER BY C1, C2 DESC (      );
✏️정답확인🌼
 

문제 46. 다음의 JOIN 결과를 보고 올바른 것은?
[TEST46_1]
COL1    COL2
-------------
1        2
2        2
3        3

[TEST46_2]
COL1    COL2
-------------
1        2
2        4
4        5

[RESULT]
TEST46_1.   TEST46_1.   TEST46_2.    TEST46_2.
COL1        COL2        COL1         COL2
----------------------------------------------
1            2            1            2
2            2            2            4
3            3           NULL         NULL
SELECT * FROM TEST46_1 (     ) TEST46_2
ON TEST46_1.COL1 = TEST46_2.COL1;
✏️정답확인🌼
 

문제 47. 아래의 상품 마스터 테이블에 대한 상품ID '001' 의 최종 상품명은 무엇인가? 정답확인🌼
[테이블 : 상품마스터]
상품ID    상품명
-------------
001      TV

[SQL]
BEGIN TRANSACTION;
SAVE TRANSACTION SP1;
UPDATE 상품마스터 SET 상품명 = 'LG-TV' WHERE 상품ID = '001';
SAVE TRANSACTION SP2;
UPDATE 상품마스터 SET 상품명 = 1 '평면-TV' WHERE 상품ID = '001';
ROLLBACK TRANSACTION SP2;
COMMIT;
✏️
 

문제 48. 테이블을 생성할 수 있는 권한을 부여하는 SQL문을 완성하시오.
[SQL]
(       ) CREATE TABLE TO USER;
✏️정답확인🌼
 

문제 49. 주어진 데이터에 대해서 아래의 SQL문을 수행하였을 때의 결과값이 아래의 결과와 같을때 (    )빈칸에 들어갈 값을 적으시오.
[TEST49]
CREATE TABLE TEST49(
COL1 VARCHAR(10),
COL2 VARCHAR(10),
COL3 NUMBER(10)
);
INSERT INTO TEST49 VALUES('A','가',10);
INSERT INTO TEST49 VALUES('A','가',20);
INSERT INTO TEST49 VALUES('A','다',25);
INSERT INTO TEST49 VALUES('B','가',10);
INSERT INTO TEST49 VALUES('B','나',30);
INSERT INTO TEST49 VALUES('B','나',20);
INSERT INTO TEST49 VALUES('B','나',60);
INSERT INTO TEST49 VALUES('C','라',30);
[SQL]
SELECT NTILE_2, COUNT(*) AS ROWCNT
FROM (
      SELECT COL1, COL2, COL3, NTILE(3) OVER(ORDER BY COL3) AS NTILE_2
      FROM TEST49
      )
GROUP BY NTILE_2;

[RESULT]
NTILE_2   ROWCNT
----------------
  1          3
  2          3
(   )      (   )
✏️정답확인🌼
 

문제 50. 주어진 테이블에 대해서 아래와 같이 결과값이 반환되도록 아래의 SQL문의 (  ?  )에 들어갈 윈도우 함수를 적으시오.
[SQLD_37_50]
ENAME       SAL
----------------
유비        1000
관우        1100
장비        1200
제갈량       1300
조운        1400
황충        1500

[RESULT]
ENAME       SAL     SIM_CNT
-----------------------------
유비        1000        2
관우        1100        2
장비        1200        2
제갈량       1300        2
조운        1400        2
황충        1500        1
[SQL]
SELECT ENAME, SAL,
COUNT(*) OVER (ORDER BY SAL ( ? ) 
               BETWEEN 50 PRECEDING AND 100 FOLLOWING
               )AS SIM_CNT
FROM SQLD_37_50;
✏️정답확인🌼



📝SQLD. 제 37 회 기출 문제(총 50) - 정답 / 해설
 

1. 정답 :  2
📖문제확인
 
해설 : 도메인(Domain)이란, 성별이라는 속성(Attribute)에서 값이 가질 수 있는 허용범위를 나타낸다.
즉, 성별의 경우 남자는 "M", 여자는 "F" 의 값을 가진다.
 
도메인(Domain)의 특징
- 릴레이션의 속성이 가질 수 있는 허용된 값의 범위를 의미한다.- 속성명과 도메인명은 항상 동일할 필요는 없다.- 모든 속성들의 도메인은 원자값 이어야 한다.
 
속성(Gender) 값이 가질수 있는 값의 범위



- 카디날리티(Cardinality) : 튜플(행)수 = 인스턴스의 수 
 
예)
 
중복도가 ‘낮으면’ 카디널리티가 ‘높다’고 표현한다.
중복도가 ‘높으면’ 카디널리티가 ‘낮다’고 표현한다.
카디널리티는 전체 행에 대한 특정 컬럼의 중복 수치를 나타내는 지표이다.
주민등록번호 같은 경우는 중복되는 값이 없으므로 카디널리티가 높다고 할 수 있다.
이에 비해 이름같은 경우는 ‘주민등록번호에 비해’ 중복되는 값이 많으므로,
이름은 ‘주민등록번호에 비해’ 카디널리티가 낮다고 할 수 있다.
‘주민등록번호에 비해’라는 부분을 강조한 이유는, 카디널리티는 상대적인 개념으로 이해해야하기 때문이다.
- 인스턴스(instance) : 값
- 차수(Degree) : 테이블 컬럼의 갯수(속성의 수) 이다.
 
2. 정답 :  4
📖문제확인
 
해설 : 외래키(Foreign key)는 주 릴레이션을 참조하는 키를 의미하는 것이다. 예를 들어 ABC기업의 직원이 특정 부서에 소속되어 있다면, 부서 릴레이션을 참조하는 직원 릴레이션의 부서코드가 외래키이다. 이러한 외래키는 참조 무결성을 준수하기 위해서 사용된다.
 
 

3. 정답 :  1
📖문제확인
 
해설 : 



변환방법
설명


One To One Type
- 슈퍼타입과 서브타입을 개별 테이블로 도출한다.- 테이블의 수가 많아서 조인이 많이 발생하고 관리가 어렵다.


Plus Type
- 슈퍼타입과 서브타입 테이블로 도출한다.- 조인이 발생하고 관리가 어렵다.


Single Type
- 슈퍼타입과 서브타입을 하나의 테이블로 도출하는 것이다.- 조인성능이 좋고 관리가 편리하지만, IO 성능이 나쁘다.



 

4. 정답 :  1
📖문제확인
 
해설 : 



특징
설명


추상화(Abstraction)
현실세계를 간략하게 표현한다.


단순화(Simple)
누구나 쉽게 이해할 수 있도록 표현한다.


명확성(Clarity)
명확하게 의미가 해석되어야 하고 한가지 의미를 가져야 한다.



 

5. 정답 :  2
📖문제확인
 
해설 : 엔터티(Entity)는 집합의 특성을 가지고 있어야 한다. 본 시나리오에서는 환자가 엔터티이고 환자이름, 주소, 전화번호, 나이 등은 속성에 해당된다.
 
 

6. 정답 :  1
📖문제확인
 
해설 : 속성의 종류는 기본속성, 설계속성, 파생속성이 있으며, 본 문제에서 금액은 기본속성에 해당되고 기본속성의 계산이나 변형으로 새롭게 만들어진 주문합계는 파생속성(Derived Attribute)이 된다.



속성의 종류
설명


기본속성
- 비즈니스 프로세스에서 도출되는 본래의 속성이다.- 회원ID, 이름, 계좌번호, 주문일자 등이 있다.


설계속성
- 데이터 모델링 과정에서 발생되는 속성이다.- 유일한 값을 부여한다.- 상품코드, 지점코드 등이 있다.


파생속성
- 다른 속성에 의해서 만들어지는 속성이다.- 합계, 평균 등이 있다.



 
 

7. 정답 :  2
📖문제확인
 
해설 : GROUP릴레이션과 ACCOUNT릴레이션의 관계는 비식별자 관계이다.(점선표현)



 
식별자 관계
비식별자 관계


목적
부모 테이블의 기본키 또는 유니크 키를 자식 테이블이 자신의 기본키로 사용하는 관계입니다. 부모 테이블의 키가 자신의 기본키에  포함되기 때문에 반드시 부모 테이블에 데이터가 존재해야 자식 테이블에 데이터를 입력할 수 있습니다. 즉, 부모 데이터가 없다면 자식 데이터는 생길 수 없습니다.(강한 연결관계)
부모 테이블의 기본키 또는 유니크 키를 자신의 기본키로 사용하지 않고, 외래 키로 사용하는 관계 (약한 연결관계)


기본키(Primary key)
부모 릴레이션의 기본키가 자식 릴레이션의 기본키로 사용됨
부모 릴레이션의 기본키가 자식 릴레이션의 일반 속성으로 사용됨


표기법
실선표현
점선표현



 

8. 정답 :  2
📖문제확인
 
해설 : 관계의 기수성을 나타내는 개념은 관계차수에 해당한다. 즉, 카디널리티(Cardinality)는 하나의 릴레이션에서 투플의 전체 개수를 의미한다.

 
9. 정답 :  4
📖문제확인
 
해설 : 
성능을 고려한 데이터모델링 순서

데이터 모델링을 할 때 정규화를 정확하게 수행
데이터베이스 용량산정 수행
데이터베이스에 발생되는 트랜잭션 유형 파악
용량과 트랜잭션의 유형에 따라 반정규화 수행
이력모델의 조정, PK/FK 조정, 슈퍼타입/서브타입 조정 수행
성능관점에서 데이터 모델 검증

 

10. 정답 :  2
📖문제확인
 
해설 : 
 
데이터 모델링에 있어서 주식별자를 도출하는 것은 중요한 작업이다. 주식별자를 도출하기 위한 기준은 아래와 같다.
 
- 해당 업무에서 자주 이용되는 속성을 주식별자로 정의한다.
- 명칭, 내역 등과 같이 이름으로 기술되는 것들은 가능하면 주식별자로 지정하지 않는다.
- 복합으로 주식별자를 구성할 경우 너무 많은 속성이 포함되지 않도록 한다.
 
 

11. 정답 :  3
📖문제확인
 
해설 : 온라인 트랜잭션 처리(OLTP)에는 해시조인 보다는 적은 데이터를 조인할 때 유리한 구조인 Nested Loop 방식이 유용하다.
 

12. 정답 :  1
📖문제확인
 
해설 : 
 



방 법
설 명


중첩 반복 조인(Nested Loop Join)
- 좁은 범위에 유리- 유리순차적으로 처리하며, Random Access 위주- 후행(Driven) 테이블에는 조인을 위한 인덱스가 생성되어 있어야 함- 실행속도 = 선행 테이블 사이즈 * 후행 테이블 접근횟수


색인된 중첩 반복 조인, 단일 반복 조인(Single Loop Join)
- 후행(Driven) 테이블의 조인 속성에 인덱스가 존재할 경우 사용- 선행 테이블의 각 레코드들에 대하여 후행 테이블의 인덱스 접근 구조를 사용하여 직접 검색 후 조인하는 방식


정렬 합병 조인(Sort Merge Join)
- Sort Merge 조인은 해당 테이블의 인덱스가 없을때 수행이 된다.- 테이블을 정렬(Sort) 한 후에 정렬된 테이블을 병합(Merge) 하면서 조인을 실행한다.- 조인 연결고리의 비교 연산자가 범위 연산( >, < )인 경우 Nested Loop 조인보다 유리- 두 결과집합의 크기가 차이가 많이 나는 경우에는 비효율적


해시 조인(Hash Join)
- 해시(Hash)함수를 사용하여 두 테이블의 자료를 결합하는 조인 방식- Nested Loop 조인과 Sort Merge 조인의 문제점을 해결- 대용량 데이터 처리는 상당히 큰 hash area를 필요로 함으로, 메모리의 지나친 사용으로 오버헤드 발생 가능성




13. 정답 :  3
📖문제확인
 
해설 : 부서별 합계 (소계) + 전체합계 이므로  ROLLUP(DEPTNO, JOB) 
 

14. 정답 :  3
📖문제확인

해설 : MERGE INTO문은 특정 키에 대해서 레코드가 있을 때에 수정사항에 대해서 UPDATE를 하고, 레코드가 없으면 새롭게 INSERT를 할 수 있는 구문이다. 
DELETE 절은 MERGE UPDATE 절로 갱신된 행을 대상으로 수행되며, 갱신된 값을 기준으로 행을 삭제한다.
(위 구문의 DELETE 는 실행되지 않는다.)
SQL> MERGE INTO TEST1
USING TEST2
 ON (TEST1.COL1 = TEST2.COL1)
WHEN MATCHED THEN
 UPDATE SET TEST1.COL3 = 4
      WHERE TEST1.COL3 = 2
 DELETE WHERE TEST1.COL3 <= 2
WHEN NOT MATCHED THEN
 INSERT(TEST1.COL1, TEST1.COL2, TEST1.COL3)
 VALUES(TEST2.COL1, TEST2.COL2, TEST2.COL3);

3 rows merged.

SQL> select*from test1;

COL1   COL2   COL3
--------------------
A      X      1
B      Y      4
C      Z      3
E      나      5
D      가      4
 

15. 정답 :  2
📖문제확인
 
해설 : 제품마스터와 주문이력을 직접 조인하면 조인 Key가 없으므로 카테시안 곱이 발생한다.


 

16. 정답 :  3
📖문제확인

해설 : CONNECT BY 계층형 조회 PRIOR가 없는 쪽에서 -> PRIOR있는 쪽으로 
처리 순서1. Start with2. Connect by3. Where
*start 3부터 시작해서 총3건 이었는데where절에서 3을 제외했으니 2건이 조회된다.

 

17. 정답 :  3
📖문제확인
 
해설 : 위의 SQL문에서 NVL2 함수의 첫번째 인자값이 NULL이기 때문에 0.2를 반환한다.
14 = 10+20*0.2
SQL> SELECT 10+20*(NVL2(NULL, 0.1, 0.2))FROM DUAL;

10+20*(NVL2(NULL,0.1,0.2))
--------------------------
			14



NULL 함수
설명


NVL 함수
- NULL이면 다른 값으로 바꾸는 함수이다.- "NVL(MGR, 0)"은 MGR칼럼이 NULL이면 0으로 바꾼다.


NVL2 함수
- NVL함수와 DECODE를 하나로 만든 것이다.- "NVL2(MGR, 1, 0)"은 MGR칼럼이 NULL이 아니면 1, NULL이면 0을 반환한다.


NULLIF 함수
- 두 개의 값이 같으면 NULL을 같지 않으면 첫 번째 값을 반환한다.- "NULLIF(exp1, exp2)"은 exp1과 exp2가 같으면 NULL을, 같지 않으면 exp1을 반환한다.


COALESCE
- "COALESCE(mgr, 1)"은 mgr이 NULL이 아니면 1을 반환한다.




18. 정답 :  1
📖문제확인
 
해설 : COALESCE 함수는 입력된 인자 중에서 NULL이 아닌 첫 번째 칼럼의 값을 반환한다.
SQL> SELECT COALESCE(1,2,3)FROM DUAL;

COALESCE(1,2,3)
---------------
	      1
 

19. 정답 :  3
📖문제확인
 
해설 : A 칼럼별로 그룹화후 집계 함수에서 NULL값을 제외하고 연산을 수행한다.
 

20. 정답 :  3
📖문제확인
 
해설 : SAVEPOINT 이름이 같을때 마지막에 저장한 값으로 ROLLBACK 한다.
 

21. 정답 :  1
📖문제확인
 
해설 : count는 4개의 행이 출력 (2, 3, 4 번의 값은 7.5가 출력된다.)
NVL 함수는 값이 NULL인 경우 지정값을 출력하고, NULL이 아니면 원래 값을 그대로 출력한다.
- 함수  :  NVL("값", "지정값") 
NVL2 함수는 NULL이 아닌 경우 지정값1을  출력하고, NULL인 경우 지정값2를 출력한다.
- 함수 :  NVL2("값", "지정값1", "지정값2") // NVL2("값", "NOT NULL", "NULL") 


ROWS |  RANGE BETWEEN
UNBOUNDED PRECEDING | CURRENT ROW | VALUE_EXPR PRECEDING/FOLLOWING
AND
UNBOUNDED FOLLOWING | CURRENT ROW | VALUE_EXPR PRECEDING/FOLLOWING

ROWS : 물리적인 ROW 단위로 행 집합을 지정 ( 현재행을 기준으로 몇개의 행을 포함하는지 )
RANGE : 논리적인 상대번지로 행 집합을 지정 ( 현재행을 기준으로 어떤 값의 범위를 포함하는지 )
BETWEEN ~ AND 절 : 윈도우의 시작과 끝 위치를 지정
UNBOUNDED PRECEDING : PARTITION의 첫 번째 로우에서 윈도우가 시작
UNBOUNDED FOLLOWING : PARTITION의 마지막 로우에서 윈도우가 시작
CURRENT ROW : 윈도우의 시작이나 끝 위치가 현재 로우



 

22. 정답 :  3
📖문제확인
 
해설 : 3번은 각 MGR별로 급여의 평균을 계산하기 전에 날짜를 기준으로 정렬을 수행한 다음에 급여의 평균을 계산한다.
즉, 각 MGR 파티션내에서 날짜 기준으로 정렬을 수행하였을 때, 파티션 내에서 앞의 한 건, 현재 행 뒤의 한 건 사이 급여의 평균을 계산한다.
 
윈도우절은 ROWS or RANGE 둘 중 하나를 선택하고 BETWEEN도 선택적으로 사용해서
결과에 대한 범위를 지정할 수 있습니다.
BETWEEN이 있을경우

ROWS|RANGE

BETWEEN UNBOUNDED PRECEDING | CURRENT ROW | 상수값 PRECEDING 또는 FOLLOWING

    AND UNBOUNDED FOLLOWING | CURRENT ROW | 상수값 PRECEDING 또는 FOLLOWING

 

BETWEEN이 없을경우

ROWS|RANGE UNBOUNDED PRECEDING | CURRENT ROW | 상수값 PRECEDING



키워드
설명


 ROWS
 물리적인 행 단위


 RANGE
 논리적인 행 집합


 CURRENT ROW
 현재 행


 UNBOUNDED PRECEDING
 첫 번째 행


 UNBOUNDED FOLLOWING
 마지막 행


 [위치] PRECEDING
 [위치] 이전 행


 [위치] FOLLOWING
 [위치] 다음 행



 
 

23. 정답 :  3
📖문제확인
 
해설 : 
첫번째 SQL문의 Null 값이 없는 행인 (10, 10, 10, 20) 합계 50
두번째 SQL문에서 SUM(COL1) = 60, SUM(COL2) = 60, SUM(COL3) = 20, SUM(COL4) = 100
60+60+20+100 합계 240
 

24. 정답 :  4
📖문제확인
 
해설 : 4번에서 DECLARE와 BEGIN ~ END 문은 필수지만, EXCEPTION 문은 선택사항이다.
[ PL/SQL의 특징 ]
1. PL/SQL은 Block구조로 되어있어 각 기능별로 모듈화가 가능하다.
2. 변수, 상수 등을 선언하여 SQL문장 간 값을 교환 한다.
3. IF, LOOP 등의 절차형 언어를 사용하여 절차적인 프로그램이 가능하도록 한다.
4. DBMS 정의 에러나 사용자 정의 에러를 정의하여 사용할 수 있다.
5. PL/SQL은 Oracle에 내장되어 있으므로 Oracle과 PL/SQL을 지원하는 어떤 서버로도 프로그램을 옮길 수 있다.
6. PL/SQL은 응용 프로그램의 성능을 향상시킨다.
7. PL/SQL은 여러 SQL문장을 Block으로 묶고 한번에 Block전부를 서버로 보내기 때문에 통신량을 줄일 수 있다.
 

25. 정답 :  4
📖문제확인
 
해설 : 4번의 실행 결과는 NULL이다. DECODE는 2개의 속성을 비교하는 것으로 위의 예에서는 '06'과 0이 같지않으므로 NULL이 반환됨
SQL> SELECT SUM(decode('06', 0, price)) AS TOTAL FROM t_order WHERE orderyear BETWEEN '2020' AND '2021';

     TOTAL
----------
- 조건을 주는 방법은 CASE문과 IF문이 있는데 이러한 조건문을 사용하면 쿼리문이 길어지기 때문에 오라클에서는 조건이 같을때 간단하게 사용할수 있는 DECODE 함수를 사용함
DECODE (값, 조건1, 결과1, default_result) 
위의 예시에서 price 를 default_result 에 작성하면 전체합계가 나온다.

SQL> SELECT SUM(decode('06', 0, price, price)) AS TOTAL FROM t_order WHERE orderyear BETWEEN '2020' AND '2021';

     TOTAL
----------
     15500
DECODE 함수는 첫번째 파라미터로 들어오는 칼럼을 기준으로 검사한다.
값이 조건1과 같으면 결과1을 반환하고, 어느 조건에도 해당되지 않을경우 default_result 반환하며, 생략한다면 NULL을 반환
 

26. 정답 :  4
📖문제확인
 
해설 : 고유키(Unique Key)로 지정된 모든 칼럼은 NULL 값을 가질 수도 있다.
 

27. 정답 :  3
📖문제확인
 
해설 : EQUI Join은 테이블 간에 칼럼 값이 일치하는 것을 조회하는 조인으로 >, <, >=, <= 를 사용하지 않음 
Non-EQUI Join 이  >, <, >=, <= 를 사용하는 조인으로 대부분의 데이터베이스에서 잘 사용하지 않는 조인이다.

 
28. 정답 :  3
📖문제확인
 
해설 : CNT 칼럼은 분류코드로 GROUPING된 집합을 원본집합으로 하여 분류코드별 평균상품가격을 서로 비교하고 현재 읽혀진 상품분류코드의 평균가격 대비 -10000 ~ +10000사이에 존재하는 분류코드의 개수를 구한 것이다.
 
 
 

29. 정답 :  1
📖문제확인
 
해설 : NOT IN문 서브쿼리의 결과 중에 NULL이 포함되는 경우 데이터가 출력되지 않는다.
IN 문은 OR 조건, NOT IN 문은 AND 조건
 
*NULL은 논리적으로 비교할 수 없는 연산이기 때문에 원하는 데이터를 추출 하기 위해서는
조회 컬럼에 IS NOT NULL조건을 주어 NULL인 데이터를 빼고 조회하면 된다.
 
 

30. 정답 :  1
📖문제확인
 
해설 : NULL은 비교에서 제외되고 주어진 테이블의 COL1 속성값 1 or 2 을 갖는 행만 출력된다.
 
IN 문은 OR 조건, NOT IN 문은 AND 조건
 

31. 정답 :  3
📖문제확인
 
해설 : '%' 나 '_' 등과 같은 특수문자를 검색하기 위해서는 ESCAPE 사용한다.
SQL> SELECT * FROM TEST WHERE NAME LIKE '%_%';
 
위와 같은 쿼리로 검색을 하게 되면 '_' 문자가 포함된 값을 가져오는게 아니라 모든 행이 출력됩니다.
특수 구문을 사용하지 않으면 % 또는 _와 같은 특수 문자가 포함 된 문자열 열에 대해 LIKE 검색을 사용할 수 없는데요 
SQL> SELECT * FROM TEST WHERE NAME LIKE '%@_%' ESCAPE '@';
LIKE 연산으로 '%' 나 '_' 등과 같은 특수문자를 검색하기 위해서는 위와 같이 ESCAPE 를 사용해주어야만 합니다.
위의 쿼리에서는 @를 사용했지만 아무 특수문자나 사용해도 결과는 같습니다.
 

32. 정답 :  2
📖문제확인
 
해설 : 보기의 SQL문은 COL1, COL2가 각각 10000, 'ABC' 인 행 만을 조회하는 SQL문으로 1번째 행만 조회된다.
 

33. 정답 :  4
📖문제확인
 
해설 : GRANT [권한] ON [테이블명] TO [유저명];
GRANT : 권한 부여
REVOKE : 권한 회수
 



명령어의 종류
명령어
설명


데이터 조작어(DML : Data Manipulation Language)
SELECT
데이터베이스에 들어 있는 데이터를 조회하거나 검색하기 위한 명령어를 말하는 것으로 RETRIEVE 라고도 한다.


INSERTUPDATEDELETE
데이터베이스의 테이블에 들어 있는 데이터에 변형을 가하는 종류의 명령어들을 말한다. 예를 들어 테이블에 새로운 행을 집어넣거나, 원하지 않는 데이터를 삭제하거나 수정하는 것들의 명령어들을 DML이라고 부른다.


데이터 정의어(DDL : Data Definition Language)
CREATEALTERDROPRENAME
테이블과 같은 데이터 구조를 정의하는 명령어들로 구조를 생성, 변경, 삭제 및 이름을 바꾸는 데이터 구조와 관련된 명령어들을 DDL이라고 부른다.


데이터 제어어(DCL : Data Control Language)
GRANTREVOKE
데이터베이스에 접근하고 객체들을 사용하도록 권한을 주고 회수하는 명령어를 DCL이라고 부른다.


트랜잭션 제어어(TCL : Transaction Control Language
COMMITROLLBACK
논리적인 작업의 단위를 묶어서 DML에 의해 조작된 결과를 작업단위(트랜잭션) 별로 제어하는 명령어를 말한다.




34. 정답 :  3
📖문제확인
 
해설 : 
FROM절에 있는 인라인뷰 의 실행결과 20, 7500 과 10, 5000 이 조회된후 WHERE TEST34_2 BETWEEN구로 조회하면 5000 ~ 5999 사이에 있는 JUMUN 10 VIP가 출력된다.
 

35. 정답 :  2
📖문제확인
 
해설 : 
#1번
SQL> SELECT * FROM 계좌마스터 WHERE 회원번호 = (SELECT DISTINCT 회원번호 FROM 고객);
SELECT * FROM 계좌마스터 WHERE 회원번호 = (SELECT DISTINCT 회원번호 FROM 고객)
                                           *
ERROR at line 1:
ORA-01427: single-row subquery returns more than one row
#1번은 서브쿼리 결과가 여러 개의 행이 리턴 되므로 오류가 발생하게 된다 ( = 단일행 연산자로 서브쿼리의 결과가 반드시 하나만 리턴 되어야 함)

#2
SQL> SELECT * FROM 계좌마스터 WHERE 회원번호 IN (SELECT DISTINCT 회원번호 FROM 고객);

계좌번호  회원번호  계좌명   계좌종류  계좌지점 계좌개설일자  예수금  평균잔고   주문일자
---------------------------------------------------------------------
100      111     1       1      1      1        1      1       1
200      222     2       2      2      2        2      2       2

#3
SQL> SELECT 회원번호, 종목코드 FROM 일자별주문내역 WHERE 주문일자 EXISTS (SELECT DISTINCT 주문일자 FROM 계좌마스터);
SELECT 회원번호, 종목코드 FROM 일자별주문내역 WHERE 주문일자 EXISTS (SELECT DISTINCT 주문일자 FROM 계좌마스터)
                                                             *
ERROR at line 1:
ORA-00920: invalid relational operator

#4
SQL> SELECT 회원번호, 종목코드 FROM 일자별주문내역 WHERE 주문일자 ALL (SELECT DISTINCT 주문일자 FROM 계좌마스터);
SELECT 회원번호, 종목코드 FROM 일자별주문내역 WHERE 주문일자 ALL (SELECT DISTINCT 주문일자 FROM 계좌마스터)
                                                             *
ERROR at line 1:
ORA-00920: invalid relational operator
   EXISTS 함수와 IN은 WHERE 절에서 조건을 걸어줄 때 사용-> 해당하는 데이터만 추출해 주는 기능-> 결과는 똑같음-> 성능 면에서는 EXISTS 함수가 더 좋음-> IN함수는 실제로 존재하지 않는 값을 비교하기에 느린 경우가 있기 때문 -> 따라서 서브쿼리 사용시 EXISTS 함수 사용 추천[EXISTS/IN 차이]-EXISTS 함수는WHERE EXISTS ()1. 괄호 안에 서브쿼리만 들어갈 수 있음. 특정값 넣을 수 X2. 처리 순서 [메인쿼리] -> [서브쿼리]3. 서브쿼리 결과가 '존재하는지만 확인' 4. NULL에 대해 TRUE 값을 리턴-IN 함수WHERE IN () 1. 괄호 안에 특정 값 / 서브 쿼리 들어갈 수 있음2. 처리 순서 [서브 쿼리] -> [메인쿼리]3. NULL에 대해 FALSE 리턴 -> 따라서 NOT IN 사용시 NVL로 NULL 체크 필요
 

36. 정답 :  3
📖문제확인
 
해설 : 
실행계획 이란 요구한 데이터를 추출하기 위해 DBMS가 차례로 수행하는 Access 과정으로 실행 계획을 읽을 때는 규칙을 토대로 하나씩 읽어나갑니다.
 
1. 위에서 아래로 읽어 내려가면서 제일 먼저 읽을 스텝을 찾습니다.
2. 내려가는 과정에서 같은 들여 쓰기가 존재한다면 무조건 위 -> 아래 순으로 읽습니다.
3. 읽고자 하는 스텝보다 들여 쓰기가 된 하위스텝이 존재한다면, 가장 안쪽으로 들여쓰기 된 스텝을 시작으로 하여 한 단계씩 상위 스텝으로 읽어 나옵니다.
 
*자식들의 좌측부터 차례대로 읽어주고 그 다음에 상위 부모로 올라가는 식으로 반복
위 문제의 실행순서를 그림으로 표현하자면 아래와 같다. 3-5-4-2-7-6-1-0


 
 

37. 정답 :  4
📖문제확인
 
해설 :고객마스터와 일자별주문내역에 나오는 칼럼 수와 데이터 타입이 일치하지 않으므로 에러가 난다.
UNION 및 UNION ALL구를 사용할 때 나오는 SQL문은 칼럼 수와 데이터 타입이 완전 일치해야 함

 
38. 정답 :  4
📖문제확인
 
해설 : TEST38 테이블은 기본키(Primary Key) 가 KEY1번과 KEY2번으로 이루어져 있다. 따라서 UNIQUE INDEX SCAN을 하려면 KEY1번과 KEY2번 모두 사용되어야 한다. 따라서 4번의 경우 KEY1번만 사용되었기 때문에 UNIQUE SCAN이 되지 않는다.
 

39. 정답 :  1
📖문제확인
 
해설 :  파티션에서 가장 처음에 나오는 값을 구하는 윈도우 함수는 FIRST_VALUE이다.



행 순서
설명


FIRST_VALUE
- 파티션에서 가장 처음에 나오는 값을 구한다.- MIN 함수를 사용해서 같은 결과를 구할 수 있다.


LASt_VALUE
- 파티션에서 가장 나중에 나오는 값을 구한다.- MAX 함수를 사용해서 같은 결과를 구할 수 있다.


LAG
- 이전에 행을 가지고 온다.


LEAD
- 윈도우에서 특정 위치의 행을 가지고 온다.- 기본 값은 1이다.



 
 

40. 정답 :  4
📖문제확인
 
해설 : 문제의 SQL문은 SELECT구에 2개 칼럼(JOB, ROWCNT)이 있다. 즉, 1번과 2번은 있지만 3번째 칼럼은 없다.
 

41. 정답 :  4
📖문제확인
 
해설 : 
트랜잭션이란? 데이터베이스의 상태를 변화시키기 위해 수행하는 작업 단위이다.
상태를 변화시킨다는 것은 SQL 질의어를 통해 DB에 접근하는 것(SELECT, INSERT, DELETE, UPDATE)



트랜잭션의 특징
설명


원자성 (Atomicity)
트랜잭션이 DB에 모두 반영되거나, 혹은 전혀 반영되지 않아야 한다. (All or Nothing)


일관성 (Consistency)
트랜잭션의 작업 처리 결과는 항상 일관성이 있어야 한다.


고립성 (Isolation)
둘 이상의 트랜잭션이 동시에 병행 실행되고 있을 때, 어떤 트랜잭션도 다른 트랜잭션 연산에 끼어들 수 없다.


지속성 (Durability)
트랜잭션이 성공적으로 완료되었으면, 결과는 영구적으로 반영되어야 한다.



 
 

42. 정답 :  3
📖문제확인
 
해설 : NATURAL JOIN의 경우 WHERE절에서 JOIN조건을 추가할 수 없지만 CROSS JOIN의 경우 WHERE절에 JOIN조건을 추가할 수 있다. 그러나 이 경우는 CROSS JOIN이 아니라 INNER JOIN과 같은 결과를 얻기 때문에 CROSS JOIN을 사용하는 의미가 없어지므로 권고하지 않는다.
 




CROSS JOIN
상호 조인이라고도 불리며, 한 쪽 테이블의 모든 행들과 다른 테이블의 모든 행을 조인시키는 기능을 한다.
이러한 CROSS JOIN을 카테시안 곱 (Cartesian Product)라고도 한다.



NATURAL JOIN
 - 동일한 타입과 이름을 가진 컬럼을 조인 조건으로 이용하는 조인을 간단히 표현하는 방법이다. - NATURAL JOIN은 두 테이블의 동일한 이름을 가지는 칼럼이 모두 조인된다. - 동일한 칼럼을 내부적으로 찾게 되므로 테이블 별칭(Alias)을 주면 오류가 발생한다.




*NATURAL JOIN 에 테이블 별칭을 쓰면 오류나는 이유? : alias는 서로 다른 relation 간에 같은 column이 있을 때 서로를 구분하기 위한 목적으로 사용되는데, natural join은 두 테이블의 동일한 이름의 column을 모두 합쳐버리므로 join 후의 relation에는 같은 이름의 column이 있을 수 없기 때문이다.
 

43. 정답 : 4
📖문제확인
 
해설 : 계층형 조회에서 MGR이 NULL인 것이 가장 상위가 된다. 즉, MGR IS NULL이 시작시점이며 EMPNO = MGR을 계층적으로 비교한다.
 

 
- - - - - - - - 주관식 - - - - - - - -
 
44. 정답 :  GROUPING SETS (B.GRADE, (B.GRADE, A.STUDENTNO))
📖문제확인
 
해설 :
결과값을 보면 1. B.GRADE, A.STUDENTNO 에 대한 집계, 2. B.GRADE에 대한 집계가 있고 전체 집계는 없다.
SQL> SELECT B.GRADE, A.STUDENTNO, SUM(B.GRADE) FROM TEST44_1 A, TEST44_2 B GROUP BY GROUPING SETS (B.GRADE, (B.GRADE, A.STUDENTNO));

     GRADE  STUDENTNO SUM(B.GRADE)
---------- ---------- ------------
	50	   10		50
	50	   20		50
	50	   30		50
	50		       150
	60	   10		60
	60	   20		60
	60	   30		60
	60		       180
	70	   10		70
	70	   20		70
	70	   30		70
	70		       210

12 rows selected.
 

45. 정답 :  NULLS LAST
📖문제확인

해설 : NULLS LAST 는 NULL 값을 마지막에 정렬시켜 준다.
 
 
NULLS FIRST : 정렬하고자 하는 NULL 데이터들을 데이터 앞에 나오게 한다. 
NULLS LAST : 정렬하고자 하는 NULL 데이터들을 데이터 뒤에 나오게 한다.
*Default 값으로 NULL 이 먼저 표시됨
 
ORDER BY [정렬하고자 하는 컬럼명] [DESC/ASC] NULLS LAST
 

46. 정답 :  LEFT OUTER JOIN
📖문제확인
 
해설 : 결과 테이블을 보면 TEST46_1 테이블에만 있는 3번행(COL1, COL2)만 조회되고 TEST46_2 테이블에는 3번행이 없으므로 NULL로 조회되었다. 따라서 LEFT OUTER JOIN을 실행한 것이다.
 
 

47. 정답 :  LG-TV
📖문제확인
 
해설 : ROLLBACK TRANSACTION SP2 문장에 의해 첫 번째 UPDATE한 내역만 반영 되므로 상품명은 LG-TV가 된다.
 

48. 정답 :  GRANT
📖문제확인
 
해설 :
테이블의 권한을 부여하는 DCL(Data Control Language) : GRANT테이블의 권한을 회수하는 DCL(Data Control Language) : REVOKE
 

49. 정답 :  3, 2
📖문제확인
 
해설 :NTILE(3)은 데이터를 3등분 한다. 그리고 각 등분에 대해서 COUNT를 계산하므로 3, 3, 2가 된다.
 
 
 

50. 정답 :  RANGE
📖문제확인
 
해설 : RANGE는 현재 행의 데이터 값을 기준으로 앞뒤 데이터 값의 범위를 표시하는 것이다.
먼저 위의 SQLD_37_50 테이블에서 결과값과 같이 반환되도록 'SAL' 속성을 기준으로 정렬을 수행하고,각행의 SAL 속성값을 기준으로 -50 ~ +150 범위 사이에 포함되는 SAL값을 가지는 모든 행의 수를 COUNT하여 SIM_CNT 속성값으로 조회한다.
 
예) 유비의 SAL 속성값 1000 을 기준  -50 ~ +150 범위 ->  950 ~1150 에 속하는 SAL 속성값은 2개 (1000, 1100)


